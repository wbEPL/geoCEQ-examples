geom_abline( aes(slope = 1, intercept = 0, colour = "Equality")) +
scale_x_continuous("% of population", labels = percent) +
scale_y_continuous("% total income", labels = percent) +
# expand_limits(c(0,0)) +
theme_bw()
bl_result |> select(weight, yc_pc) |> mutate(Simulation = "baseline") |>
bind_rows(no_tsa_result |> select(weight, yc_pc) |> mutate(Simulation = "No TSA")) |>
bind_rows(double_tsa_result |> select(weight, yc_pc) |> mutate(Simulation = "High TSA")) |>
group_by(Simulation) |>
arrange(yc_pc) |>
mutate(
yc_cum = cumsum(yc_pc) / max(cumsum(yc_pc)),
wt_cum = cumsum(weight) / max(cumsum(weight))
) |>
ungroup() |>
ggplot() +
aes(x = wt_cum, y = yc_cum, colour = Simulation) +
geom_line() +
geom_abline( aes(slope = 1, intercept = 0, colour = "Equality")) +
scale_x_continuous("% of population", labels = scales::percent) +
scale_y_continuous("% total income", labels = scales::percent) +
# expand_limits(c(0,0)) +
theme_bw()
library(scales)
bl_result |> select(weight, yc_pc) |> mutate(Simulation = "baseline") |>
bind_rows(no_tsa_result |> select(weight, yc_pc) |> mutate(Simulation = "No TSA")) |>
bind_rows(double_tsa_result |> select(weight, yc_pc) |> mutate(Simulation = "High TSA")) |>
group_by(Simulation) |>
arrange(yc_pc) |>
mutate(
yc_cum = cumsum(yc_pc) / max(cumsum(yc_pc)),
wt_cum = cumsum(weight) / max(cumsum(weight))
) |>
ungroup() |>
ggplot() +
aes(x = wt_cum, y = yc_cum, colour = Simulation) +
geom_line() +
geom_abline( aes(slope = 1, intercept = 0, colour = "Equality")) +
scale_x_continuous("% of population", labels = scales::percent) +
scale_y_continuous("% total income", labels = scales::percent) +
# expand_limits(c(0,0)) +
theme_bw()
bl_result |> select(weight, yc_pc) |> mutate(Simulation = "baseline") |>
bind_rows(no_tsa_result |> select(weight, yc_pc) |> mutate(Simulation = "No TSA")) |>
bind_rows(double_tsa_result |> select(weight, yc_pc) |> mutate(Simulation = "High TSA")) |>
group_by(Simulation) |>
arrange(yc_pc) |>
mutate(
yc_cum = cumsum(yc_pc) / max(cumsum(yc_pc)),
wt_cum = cumsum(weight) / max(cumsum(weight))
) |>
ungroup() |>
ggplot() +
aes(x = wt_cum, y = yc_cum, colour = Simulation) +
geom_line() +
geom_abline(slope = 1, intercept = 0, colour = "black") +
scale_x_continuous("% of population", labels = scales::percent) +
scale_y_continuous("% total income", labels = scales::percent) +
# expand_limits(c(0,0)) +
theme_bw()
bl_result |> select(weight, yc_pc) |> mutate(Simulation = "Baseline") |>
bind_rows(no_tsa_result |> select(weight, yc_pc) |> mutate(Simulation = "No TSA")) |>
bind_rows(double_tsa_result |> select(weight, yc_pc) |> mutate(Simulation = "High TSA")) |>
group_by(Simulation) |>
arrange(yc_pc) |>
mutate(
yc_cum = cumsum(yc_pc) / max(cumsum(yc_pc)),
wt_cum = cumsum(weight) / max(cumsum(weight))
) |>
ungroup() |>
ggplot() +
aes(x = wt_cum, y = yc_cum, colour = Simulation) +
geom_line() +
geom_abline(slope = 1, intercept = 0, colour = "black") +
scale_x_continuous("% of population", labels = scales::percent) +
scale_y_continuous("% total income", labels = scales::percent) +
# expand_limits(c(0,0)) +
theme_bw()
out_plt <-
bl_result |> select(weight, yc_pc) |> mutate(Simulation = "Baseline") |>
bind_rows(no_tsa_result |> select(weight, yc_pc) |> mutate(Simulation = "No TSA")) |>
bind_rows(double_tsa_result |> select(weight, yc_pc) |> mutate(Simulation = "High TSA")) |>
group_by(Simulation) |>
arrange(yc_pc) |>
mutate(
yc_cum = cumsum(yc_pc) / max(cumsum(yc_pc)),
wt_cum = cumsum(weight) / max(cumsum(weight))
) |>
ungroup() |>
ggplot() +
aes(x = wt_cum, y = yc_cum, colour = Simulation) +
geom_line() +
geom_abline(slope = 1, intercept = 0, colour = "black") +
scale_x_continuous("% of population", labels = scales::percent) +
scale_y_continuous("% total income", labels = scales::percent) +
theme_bw()
ggsave("plt_1.png", plot = out_plt, width = 4, height = 4)
out_plt + theme(legend.location = c(0, 1))
out_plt
out_plt + theme(legend.position = c(0, 1))
out_plt + theme(legend.position.inside = = c(0, 1))
out_plt + theme(legend.position.inside = c(0, 1))
out_plt + theme(legend.position.inside = T)
out_plt+ theme(
legend.position = "inside",
legend.position.inside = c(.95, .95),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6)
)
out_plt+ theme(
legend.position = "inside",
legend.position.inside = c(.5, .95),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6)
)
out_plt+ theme(
legend.position = "inside",
legend.position.inside = c(.05, .95),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6)
)
out_plt+ theme(
legend.position = "inside",
legend.position.inside = c(.15, .95),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6)
)
out_plt <-
bl_result |> select(weight, yc_pc) |> mutate(Simulation = "Baseline") |>
bind_rows(no_tsa_result |> select(weight, yc_pc) |> mutate(Simulation = "No TSA")) |>
bind_rows(double_tsa_result |> select(weight, yc_pc) |> mutate(Simulation = "High TSA")) |>
group_by(Simulation) |>
arrange(yc_pc) |>
mutate(
yc_cum = cumsum(yc_pc) / max(cumsum(yc_pc)),
wt_cum = cumsum(weight) / max(cumsum(weight))
) |>
ungroup() |>
ggplot() +
aes(x = wt_cum, y = yc_cum, colour = Simulation) +
geom_line() +
geom_abline(slope = 1, intercept = 0, colour = "black") +
scale_x_continuous("% of population", labels = scales::percent) +
scale_y_continuous("% total income", labels = scales::percent) +
theme_bw() + theme(
legend.position = "inside",
legend.position.inside = c(.15, .95),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6)
)
ggsave("plt_1.png", plot = out_plt, width = 4, height = 4)
out_plt <-
bl_result |> select(weight, yc_pc) |> mutate(Simulation = "Baseline") |>
bind_rows(no_tsa_result |> select(weight, yc_pc) |> mutate(Simulation = "No TSA")) |>
bind_rows(double_tsa_result |> select(weight, yc_pc) |> mutate(Simulation = "High TSA")) |>
group_by(Simulation) |>
arrange(yc_pc) |>
mutate(
yc_cum = cumsum(yc_pc) / max(cumsum(yc_pc)),
wt_cum = cumsum(weight) / max(cumsum(weight))
) |>
ungroup() |>
ggplot() +
aes(x = wt_cum, y = yc_cum, colour = Simulation) +
geom_line() +
geom_abline(slope = 1, intercept = 0, colour = "black") +
scale_x_continuous("% of population", labels = scales::percent) +
scale_y_continuous("% total income", labels = scales::percent) +
theme_bw() + theme(
legend.position = "inside",
legend.position.inside = c(.15, .95),
legend.justification = c("right", "top"),
legend.box.just = "left",
legend.margin = margin(6, 6, 6, 6)
)
ggsave("plt_1.png", plot = out_plt, width = 4, height = 4)
out_plt <-
bl_result |> select(weight, yc_pc) |> mutate(Simulation = "Baseline") |>
bind_rows(no_tsa_result |> select(weight, yc_pc) |> mutate(Simulation = "No TSA")) |>
bind_rows(double_tsa_result |> select(weight, yc_pc) |> mutate(Simulation = "High TSA")) |>
group_by(Simulation) |>
arrange(yc_pc) |>
mutate(
yc_cum = cumsum(yc_pc) / max(cumsum(yc_pc)),
wt_cum = cumsum(weight) / max(cumsum(weight))
) |>
ungroup() |>
ggplot() +
aes(x = wt_cum, y = yc_cum, colour = Simulation) +
geom_line() +
geom_abline(slope = 1, intercept = 0, colour = "black") +
scale_x_continuous("% of population", labels = scales::percent) +
scale_y_continuous("% total income", labels = scales::percent) +
theme_bw() + theme(
legend.position = "inside",
legend.position.inside = c(.35, .95),
legend.justification = c("right", "top"),
legend.box.just = "left",
legend.margin = margin(6, 6, 6, 6)
)
ggsave("plt_1.png", plot = out_plt, width = 4, height = 4)
ggsave("plt_1.png", plot = out_plt, width = 5, height = 4)
bl_result
bl_result |> glimpse()
# Simulation inputs
ins_bl <- baseline_inputs()
## Exploring individual imputs
ins_bl$simu_tsa_value
ins_bl$tsa_under_16
ins_bl$tsa_over_16
ins_bl$simu_tsa_benef
ins_bl$benef_q_1
ins_bl$benef_q_2
# Simulation inputs
inp_bl <- baseline_inputs()
## Exploring individual inputs
names(inp_bl)
inp_bl$tsa_under_16
inp_bl$simu_tsa_mult
inp_bl$simu_tsa_value
inp_bl$tsa_under_16
inp_bl$tsa_over_16
inp_sim1 <- inp_bl
bl_result |> View()
bl_result |> names()
bl_result |> glimpse()
bl_result |>
select(familysize, weight, gender, ym_pc, yp_pc, yd_pc, yc_pc, yf_pc)
bl_result |>
select(familysize, weight, gender, ym_pc, yp_pc, yd_pc, yc_pc, yf_pc)
bl_result |>
select(familysize, weight, gender, ym_pc, yp_pc, yd_pc, yc_pc, yf_pc) |>
ggplot() +
aes(x = yd_pc) +
geom_density()
bl_result |>
select(familysize, weight, gender, ym_pc, yp_pc, yd_pc, yc_pc, yf_pc) |>
ggplot() +
aes(x = yd_pc) +
geom_density() +
scale_x_log10()
bl_result |>
select(familysize, weight, gender, ym_pc, yp_pc, yd_pc, yc_pc, yf_pc) |>
ggplot() +
aes(x = yd_pc, weight = weight) +
geom_density()
bl_result |>
select(familysize, weight, gender, ym_pc, yp_pc, yd_pc, yc_pc, yf_pc) |>
ggplot() +
geom_density( aes(x = yd_pc, weight = weight, fill = "Disposable") )
bl_result |>
select(familysize, weight, gender, ym_pc, yp_pc, yd_pc, yc_pc, yf_pc) |>
ggplot() +
geom_density( aes(x = yd_pc, weight = weight, fill = "Disposable"), alpha = 0.1 )
bl_result |>
select(familysize, weight, gender, ym_pc, yp_pc, yd_pc, yc_pc, yf_pc) |>
ggplot() +
geom_density( aes(x = yd_pc, weight = weight, fill = "Disposable"), alpha = 0.1 )+
geom_density( aes(x = yc_pc, weight = weight, fill = "Disposable"), alpha = 0.1 )+
geom_density( aes(x = ym_pc, weight = weight, fill = "Disposable"), alpha = 0.1 )
bl_result |>
select(familysize, weight, gender, ym_pc, yp_pc, yd_pc, yc_pc, yf_pc) |>
ggplot() +
geom_density( aes(x = yd_pc, weight = weight, fill = "Disposable"), alpha = 0.1 )+
geom_density( aes(x = yc_pc, weight = weight, fill = "Consumable"), alpha = 0.1 )+
geom_density( aes(x = ym_pc, weight = weight, fill = "Market"), alpha = 0.1 ) +
scale_x_continuous(limits = c(0, 20000))
bl_result |>
select(familysize, weight, gender, ym_pc, yp_pc, yd_pc, yc_pc, yf_pc) |>
ggplot() +
geom_density( aes(x = yd_pc, weight = weight, fill = "Disposable"), alpha = 0.1 )+
geom_density( aes(x = yc_pc, weight = weight, fill = "Consumable"), alpha = 0.1 )+
geom_density( aes(x = ym_pc, weight = weight, fill = "Market"), alpha = 0.1 ) +
scale_x_continuous(limits = c(0, 15000))
bl_result |>
select(familysize, weight, gender, ym_pc, yp_pc, yd_pc, yc_pc, yf_pc) |>
ggplot() +
geom_density( aes(x = yd_pc, weight = weight, fill = "Disposable"), alpha = 0.1 )+
geom_density( aes(x = yc_pc, weight = weight, fill = "Consumable"), alpha = 0.1 )+
geom_density( aes(x = ym_pc, weight = weight, fill = "Market"), alpha = 0.1 ) +
scale_x_continuous(limits = c(0, 15000), n.breaks = 10)
## Income distribution by HH head gender
bl_result |>
select(familysize, weight, gender, ym_pc, yp_pc, yd_pc, yc_pc, yf_pc) |>
ggplot() +
geom_density( aes(x = yd_pc, weight = weight, fill = gender), alpha = 0.1 ) +
scale_x_continuous(limits = c(0, 15000), n.breaks = 10)
## Calculate poverty
bl_result |>
select(familysize, weight, gender, ym_pc, yp_pc, yd_pc, yc_pc, yf_pc) |>
mutate(poor = ym_pc < 2000) |>
group_by(poor) |>
summarise(headcount = sum(weight))
library("GeoappPackage")
library(dplyr)
library(readr)
library(scales)
dta_presim <- read_rds("presim.rds")
dta_baseline <- read_rds("baseline.rds")
dta_presim
dta_baseline
ins_bl <- baseline_inputs()
ins_bl$simu_tsa_value
ins_bl$tsa_under_16
ins_bl$tsa_over_16
ins_bl$simu_tsa_benef
ins_bl$benef_q_1
ins_bl$benef_q_2
ins_bl$benef_q_3
ins_bl$benef_q_4
ins_bl$benef_q_5
bl_result <- GeoappPackage::full_ceq(ins_bl, dta_presim)
ins_notsa <- ins_bl
ins_notsa$simu_tsa_value <- 1
ins_notsa$tsa_under_16 <- 0
ins_notsa$tsa_over_16 <- 0
no_tsa_result <- GeoappPackage::full_ceq(ins_notsa, dta_presim)
ins_double_tsa <- ins_bl
ins_double_tsa$simu_tsa_value <- 1
ins_double_tsa$tsa_under_16 <- 450
ins_double_tsa$tsa_over_16 <- 150
double_tsa_result <- GeoappPackage::full_ceq(ins_double_tsa, dta_presim)
out_plt <-
bl_result |> select(weight, yc_pc) |> mutate(Simulation = "Baseline") |>
bind_rows(no_tsa_result |> select(weight, yc_pc) |> mutate(Simulation = "No TSA")) |>
bind_rows(double_tsa_result |> select(weight, yc_pc) |> mutate(Simulation = "High TSA")) |>
group_by(Simulation) |>
arrange(yc_pc) |>
mutate(
yc_cum = cumsum(yc_pc) / max(cumsum(yc_pc)),
wt_cum = cumsum(weight) / max(cumsum(weight))
) |>
ungroup() |>
ggplot() +
aes(x = wt_cum, y = yc_cum, colour = Simulation) +
geom_line() +
geom_abline(slope = 1, intercept = 0, colour = "black") +
scale_x_continuous("% of population", labels = scales::percent) +
scale_y_continuous("% total income", labels = scales::percent) +
theme_bw() + theme(
legend.position = "inside",
legend.position.inside = c(.35, .95),
legend.justification = c("right", "top"),
legend.box.just = "left",
legend.margin = margin(6, 6, 6, 6)
)
out_plt
bl_result |> select(familysize, weight, gender, yd_pc, yc_pc)
# Run simulation in R console
library(dplyr)
library(readr)
library(scales)
# R-package with simulation code (and the app)
library("GeoappPackage")
# Data load -----------------------------------------
dta_presim <- read_rds("presim.rds")
bl_1 <- bl_result |> select(familysize, weight, gender, yd_pc, yc_pc)
# Data load -----------------------------------------
dta_presim <- read_rds("data/presim.rds")
dta_baseline <- read_rds("data/baseline.rds")
# Simulation inputs ---------------------------------
inp_bl <- baseline_inputs()
## Exploring individual inputs
names(inp_bl)
inp_bl$simu_tsa_value
inp_bl$tsa_under_16
inp_bl$tsa_over_16
bl_result <- full_ceq(inps = inp_bl, presim = dta_presim)
bl_result
## Explore the data
bl_result |> View()
bl_result |> names()
bl_result |> glimpse()
bl_1 <- bl_result |> select(familysize, weight, gender, yd_pc, yc_pc)
bl_1 |> glimpse()
# Calculate the poverty rate
bl_1 |>
mutate(poor = yd_pc < 150)
# Calculate the poverty rate
bl_1 |>
mutate(poor = yd_pc < 150) |>
group_by(poor) |>
summarise(headcount = n())
# Calculate the poverty rate
bl_1 |>
mutate(poor = yd_pc < 1500) |>
group_by(poor) |>
summarise(headcount = n())
# Calculate the poverty rate
bl_1 |>
mutate(poor = yd_pc < 2500) |>
group_by(poor) |>
summarise(headcount = n())
# Calculate the poverty rate
bl_1 |>
mutate(poor = yd_pc < 2500) |>
group_by(poor) |>
summarise(
headcount_1 = n(),
headcount = sum(weight))
# Calculate the poverty rate
bl_1 |>
mutate(poor = yd_pc < 2500) |>
group_by(poor) |>
summarise(
headcount_1 = n(),
headcount = sum(weight)) |>
ungroup() |>
mutate(poverty_rate = headcount / sum(headcount))
## Explore income distribution
bl_1 |>
ggplot() +
geom_density( aes(x = yc_pc, weight = weight, fill = "Consumable"), alpha = 0.1 )+
scale_x_continuous(limits = c(0, 15000), n.breaks = 10)
bl_1 |>
ggplot() +
aes(x = yc_pc, weight = weight, fill = "Consumable") +
geom_density(alpha = 0.1 )+
scale_x_continuous(limits = c(0, 15000), n.breaks = 10)
bl_1 |>
ggplot() +
aes(x = yc_pc, weight = weight, fill = sex) +
geom_density(alpha = 0.1 )+
scale_x_continuous(limits = c(0, 15000), n.breaks = 10)
bl_1
bl_1 |>
ggplot() +
aes(x = yc_pc, weight = weight, fill = gender ) +
geom_density(alpha = 0.1 )+
scale_x_continuous(limits = c(0, 15000), n.breaks = 10)
bl_1 |> mutate(sex = ifelse(gender == 1, "Male", "Female")) |>
ggplot() +
aes(x = yc_pc, weight = weight, fill = gender ) +
geom_density(alpha = 0.1 )+
scale_x_continuous(limits = c(0, 15000), n.breaks = 10)
bl_1 |>
mutate(sex = ifelse(gender == 1, "Male", "Female")) |>
ggplot() +
aes(x = yc_pc, weight = weight, fill = sex) +
geom_density(alpha = 0.1 )+
scale_x_continuous(limits = c(0, 15000), n.breaks = 10)
bl_1 |>
mutate(sex = ifelse(gender == 1, "Male", "Female")) |>
ggplot() +
aes(x = yc_pc,  fill = sex) +
geom_density(alpha = 0.1 )+
scale_x_continuous(limits = c(0, 15000), n.breaks = 10)
no_tsa_result |>
mutate(poor = yd_pc < 2500) |>
group_by(poor) |>
summarise(
headcount_1 = n(),
headcount = sum(weight)) |>
ungroup() |>
mutate(poverty_rate = headcount / sum(headcount))
ins_notsa <- inp_bl
ins_notsa$simu_tsa_value <- 1
ins_notsa$tsa_under_16 <- 0
ins_notsa$tsa_over_16 <- 0
no_tsa_result <- GeoappPackage::full_ceq(ins_notsa, dta_presim)
no_tsa_result |>
mutate(poor = yd_pc < 2500) |>
group_by(poor) |>
summarise(
headcount_1 = n(),
headcount = sum(weight)) |>
ungroup() |>
mutate(poverty_rate = headcount / sum(headcount))
out_plt <-
bl_result |> select(weight, yc_pc) |> mutate(Simulation = "Baseline") |>
bind_rows(no_tsa_result |> select(weight, yc_pc) |> mutate(Simulation = "No TSA")) |>
group_by(Simulation) |>
arrange(yc_pc) |>
mutate(
yc_cum = cumsum(yc_pc) / max(cumsum(yc_pc)),
wt_cum = cumsum(weight) / max(cumsum(weight))
) |>
ungroup() |>
ggplot() +
aes(x = wt_cum, y = yc_cum, colour = Simulation) +
geom_line() +
geom_abline(slope = 1, intercept = 0, colour = "black") +
scale_x_continuous("% of population", labels = scales::percent) +
scale_y_continuous("% total income", labels = scales::percent) +
theme_bw() + theme(
legend.position = "inside",
legend.position.inside = c(.35, .95),
legend.justification = c("right", "top"),
legend.box.just = "left",
legend.margin = margin(6, 6, 6, 6)
)
bl_result |> select(weight, yc_pc) |> mutate(Simulation = "Baseline") |>
bind_rows(no_tsa_result |> select(weight, yc_pc) |> mutate(Simulation = "No TSA")) |>
group_by(Simulation) |>
arrange(yc_pc) |>
mutate(
yc_cum = cumsum(yc_pc) / max(cumsum(yc_pc)),
wt_cum = cumsum(weight) / max(cumsum(weight))
) |>
ungroup() |>
ggplot() +
aes(x = wt_cum, y = yc_cum, colour = Simulation) +
geom_line() +
geom_abline(slope = 1, intercept = 0, colour = "black") +
scale_x_continuous("% of population", labels = scales::percent) +
scale_y_continuous("% total income", labels = scales::percent) +
theme_bw()
